{#- This namespace holds repo versions #}
{%- set repo_rev = namespace() %}

{%- if odoo_version >= 14 %}
  {%- set repo_rev.autoflake = "v1.4" %}
  {%- set repo_rev.black = "20.8b1" %}
  {%- set repo_rev.eslint = "v7.8.1" %}
  {%- set repo_rev.flake8 = "3.8.3" %}
  {%- set repo_rev.flake8_bugbear = "20.1.4" %}
  {%- set repo_rev.isort = "5.5.1" %}
  {%- set repo_rev.pre_commit_hooks = "v3.2.0" %}
  {%- set repo_rev.prettier = "2.1.2" %}
  {%- set repo_rev.prettier_xml = "0.12.0" %}
  {#- HACK https://github.com/OCA/pylint-odoo/issues/296#issuecomment-700317722 #}
  {%- set repo_rev.pylint = "pylint-2.5.3" %}
  {%- set repo_rev.pylint_odoo = "3.5.0" %}
  {%- set repo_rev.pyupgrade = "v2.7.2" %}
  {%- set repo_rev.setuptools_odoo = "2.6.0" %}
{%- endif %}

{#- Older versions that differ a lot have their own hardcoded templates for readability #}
{%- if odoo_version < 14 %}
  {%- include "version-specific/%s/.pre-commit-config.yaml" % odoo_version %}

{#- Newer versions without hacks are rendered here directly #}
{%- else %}
exclude: |
  (?x)
  # NOT INSTALLABLE ADDONS
  # END NOT INSTALLABLE ADDONS
  # Files and folders generated by bots, to avoid loops
  ^setup/|/static/description/index\.html$|
  # We don't want to mess with tool-generated files
  .svg$|
  # Maybe reactivate this when all README files include prettier ignore tags?
  ^README\.md$|
  # Library files can have extraneous formatting (even minimized)
  /static/(src/)?lib/|
  # Repos using Sphinx to generate docs don't need prettying
  ^docs/_templates/.*\.html$|
  # You don't usually want a bot to modify your legal texts
  (LICENSE.*|COPYING.*)
default_language_version:
  python: python3
  node: "14.13.0"
repos:
  - repo: local
    hooks:
      # These files are most likely copier diff rejection junks; if found,
      # review them manually, fix the problem (if needed) and remove them
      - id: forbidden-files
        name: forbidden files
        entry: found forbidden files; remove them
        language: fail
        files: "\\.rej$"
  - repo: https://github.com/oca/maintainer-tools
    rev: ab1d7f6
    hooks:
      # update the NOT INSTALLABLE ADDONS section above
      - id: oca-update-pre-commit-excluded-addons
      - id: oca-fix-manifest-website
        args: ["https://github.com/OCA/{{ repo_slug }}"]
  - repo: https://github.com/myint/autoflake
    rev: {{ repo_rev.autoflake }}
    hooks:
      - id: autoflake
        args: ["-i", "--ignore-init-module-imports"]
  - repo: https://github.com/psf/black
    rev: {{ repo_rev.black }}
    hooks:
      - id: black
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v{{ repo_rev.prettier }}
    hooks:
      - id: prettier
        name: prettier (with plugin-xml)
        additional_dependencies:
          - "prettier@{{ repo_rev.prettier }}"
          - "@prettier/plugin-xml@{{ repo_rev.prettier_xml }}"
        args:
          - --plugin=@prettier/plugin-xml
        files: \.(css|htm|html|js|json|jsx|less|md|scss|toml|ts|xml|yaml|yml)$
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: {{ repo_rev.eslint }}
    hooks:
      - id: eslint
        verbose: true
        args:
          - --color
          - --fix
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: {{ repo_rev.pre_commit_hooks }}
    hooks:
      - id: trailing-whitespace
        # exclude autogenerated files
        exclude: /README\.rst$|\.pot?$
      - id: end-of-file-fixer
        # exclude autogenerated files
        exclude: /README\.rst$|\.pot?$
      - id: debug-statements
      - id: fix-encoding-pragma
        args: ["--remove"]
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
        # exclude files where underlines are not distinguishable from merge conflicts
        exclude: /README\.rst$|^docs/.*\.rst$
      - id: check-symlinks
      - id: check-xml
      - id: mixed-line-ending
        args: ["--fix=lf"]
  - repo: https://github.com/asottile/pyupgrade
    rev: {{ repo_rev.pyupgrade }}
    hooks:
      - id: pyupgrade
  - repo: https://github.com/PyCQA/isort
    rev: {{ repo_rev.isort }}
    hooks:
      - id: isort
        name: isort except __init__.py
        args:
          - --settings=.
        exclude: /__init__\.py$
  - repo: https://github.com/acsone/setuptools-odoo
    rev: {{ repo_rev.setuptools_odoo }}
    hooks:
      - id: setuptools-odoo-make-default
      {%- if generate_requirements_txt %}
      - id: setuptools-odoo-get-requirements
        args:
          - --output
          - requirements.txt
          - --header
          - "# generated from manifests external_dependencies"
      {%- endif %}
  - repo: https://gitlab.com/PyCQA/flake8
    rev: {{ repo_rev.flake8 }}
    hooks:
      - id: flake8
        name: flake8 except __init__.py
        exclude: /__init__\.py$
        additional_dependencies: ["flake8-bugbear=={{ repo_rev.flake8_bugbear }}"]
      - id: flake8
        name: flake8 only __init__.py
        args: ["--extend-ignore=F401"] # ignore unused imports in __init__.py
        files: /__init__\.py$
        additional_dependencies: ["flake8-bugbear=={{ repo_rev.flake8_bugbear }}"]
  - repo: https://github.com/PyCQA/pylint
    rev: {{ repo_rev.pylint }}
    hooks:
      - id: pylint
        name: pylint with optional checks
        args:
          - --rcfile=.pylintrc
          - --exit-zero
        verbose: true
        additional_dependencies: &pylint_deps
          - pylint-odoo=={{ repo_rev.pylint_odoo }}
      - id: pylint
        name: pylint with mandatory checks
        args:
          - --rcfile=.pylintrc-mandatory
        additional_dependencies: *pylint_deps
{%- endif %}
