name: test

on:
  pull_request:
  push:
    branches: [master]
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
      # Prepare environment
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry

      # Some tests exercise pre-commit; all use poetry; cache that
      - name: Restore poetry and pre-commit cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/pypoetry/virtualenvs
          key:
            test-${{ runner.os }}-${{ hashFiles('poetry.lock',
            '**/.pre-commit-config.yaml.jinja') }}

      # Install specific alternate python versions required by hooks
      - name: Install python
        uses: actions/setup-python@v4
        with:
          cache: poetry
          python-version: |
            3.6
            3.7
            3.8
            3.10
            3.11

      # Let tests issue git commits
      - run: git config --global user.name CI
      - run: git config --global user.email CI@GITHUB

      # Run all tests
      - run: poetry install
      - run: poetry run pytest --color yes
