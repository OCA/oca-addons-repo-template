name: test

on:
  pull_request:
  push:
    branches: [master]
  release:
    types: [created]

jobs:
  test:
    runs-on: ${{matrix.machine}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - odoo-version: 11.0
            python-version: 3.6
            machine: ubuntu-20.04
          - odoo-version: 12.0
            python-version: 3.6
            machine: ubuntu-20.04
          - odoo-version: 13.0
            python-version: 3.8
            machine: ubuntu-22.04
          - odoo-version: 14.0
            python-version: 3.8
            machine: ubuntu-22.04
          - odoo-version: 15.0
            python-version: 3.8
            machine: ubuntu-22.04
          - odoo-version: 16.0
            python-version: "3.10"
            machine: ubuntu-22.04
          - odoo-version: 17.0
            python-version: "3.10"
            machine: ubuntu-22.04
    steps:
      # Prepare environment
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry

      # Install specific alternate python versions required by hooks
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
<<<<<<< HEAD
          cache: poetry

=======
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.0
      - name: generate cache key PY
        run:
          echo "PY=$((python -VV; pip freeze; poetry --version) | sha256sum | cut -d' '
          -f1)" >> $GITHUB_ENV
      - uses: actions/cache@v2.1.1
        with:
          path: .venv
          # HACK https://github.com/actions/cache/issues/2#issuecomment-673493515
          # If you need to "clear" cache, just update the `CACHE_DATE` secret,
          # putting current date (and time, if needed)
          key: >-
            cache ${{ secrets.CACHE_DATE }} ${{ env.PY }} ${{ runner.os }} ${{
            hashFiles('pyproject.toml') }} ${{ hashFiles('poetry.lock') }}
      # HACK python-poetry/poetry#3010 and 3336 workaround for GitHub actions
      # and poetry 1.1.2 throwing 'Incorrectly nested style tag found.'
      - run: poetry config experimental.new-installer false
      - run: poetry install
>>>>>>> bc5ada9 (Dev cetmix (#8))
      # Let tests issue git commits
      - run: git config --global user.name CI
      - run: git config --global user.email CI@GITHUB

      # Run all tests
      - run: poetry install
      - run: poetry run pytest --color yes
        env:
          SELECTED_ODOO_VERSIONS: ${{ matrix.odoo-version }}
